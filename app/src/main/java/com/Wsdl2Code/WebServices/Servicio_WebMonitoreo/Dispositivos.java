package com.Wsdl2Code.WebServices.Servicio_WebMonitoreo;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 11/9/2016 5:44:12 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class Dispositivos implements KvmSerializable {
    
    public String terminal;
    public String string_Alerta;
    public String estado;
    public String tipo;
    public String fecha;
    
    public Dispositivos(){}
    
    public Dispositivos(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Terminal"))
        {
            Object obj = soapObject.getProperty("Terminal");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                terminal = j.toString();
            }else if (obj!= null && obj instanceof String){
                terminal = (String) obj;
            }
        }
        if (soapObject.hasProperty("String_Alerta"))
        {
            Object obj = soapObject.getProperty("String_Alerta");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                string_Alerta = j.toString();
            }else if (obj!= null && obj instanceof String){
                string_Alerta = (String) obj;
            }
        }
        if (soapObject.hasProperty("Estado"))
        {
            Object obj = soapObject.getProperty("Estado");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                estado = j.toString();
            }else if (obj!= null && obj instanceof String){
                estado = (String) obj;
            }
        }
        if (soapObject.hasProperty("Tipo"))
        {
            Object obj = soapObject.getProperty("Tipo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tipo = j.toString();
            }else if (obj!= null && obj instanceof String){
                tipo = (String) obj;
            }
        }
        if (soapObject.hasProperty("Fecha"))
        {
            Object obj = soapObject.getProperty("Fecha");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fecha = j.toString();
            }else if (obj!= null && obj instanceof String){
                fecha = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return terminal;
            case 1:
                return string_Alerta;
            case 2:
                return estado;
            case 3:
                return tipo;
            case 4:
                return fecha;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 5;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Terminal";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "String_Alerta";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Estado";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Tipo";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Fecha";
                break;
        }
    }
    

    public String getInnerText() {
        return null;
    }
    
    

    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
